<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover" />
  <title>AR Debug Minimal</title>
  <style>
    /* ---------------------------------------- */
    /* Layout + Safe-Area */
    html, body {
      margin: 0; padding: 0;
      width: 100%; height: 100%;
      padding-top: env(safe-area-inset-top);
      padding-bottom: env(safe-area-inset-bottom);
      overflow: hidden;
      background: #000;
      font-family: system-ui, sans-serif;
      color: #fff;
    }
    video, canvas {
      position: absolute; top: 0; left: 0;
      width: 100%; height: 100%;
      object-fit: cover;
    }

    /* Debug pane at top */
    #debug {
      position: fixed; top: env(safe-area-inset-top); left: 0; right: 0;
      height: 140px; background: rgba(0,0,0,0.8);
      color: #0f8; font-family: monospace; font-size: 12px;
      padding: 6px; overflow-y: auto; z-index: 1000;
      box-shadow: 0 2px 8px rgba(0,0,0,0.6);
    }

    /* Controls at bottom */
    #controls {
      position: fixed; bottom: env(safe-area-inset-bottom); left: 0; right: 0;
      display: flex; gap: 8px; padding: 8px;
      background: rgba(0,0,0,0.7); z-index: 1000;
    }
    button {
      flex: 1; padding: 10px;
      font-size: 14px; color: #fff;
      background: #222; border: none; border-radius: 4px;
    }
    button:disabled { opacity: 0.4; }
    pre { margin: 0; }
  </style>
</head>
<body>

  <video id="vid" playsinline autoplay muted></video>
  <canvas id="cv"></canvas>

  <pre id="debug">[ready]\n</pre>

  <div id="controls">
    <button id="btnCam">Start Camera</button>
    <button id="btnGeo" disabled>Get Location</button>
    <button id="btnGyro" disabled>Enable Motion</button>
    <button id="btnAR" disabled>Start AR</button>
  </div>

  <script>
  const log = (...args) => {
    const d = document.getElementById('debug');
    d.textContent += args.join(' ') + '\\n';
    d.scrollTop = d.scrollHeight;
  };

  let stream, lat, lng, heading, pitch;

  // 1) CAMERA
  document.getElementById('btnCam').onclick = async () => {
    try {
      stream = await navigator.mediaDevices.getUserMedia({
        video:{ facingMode:'environment' }, audio:false
      });
      document.getElementById('vid').srcObject = stream;
      log('‚úÖ Camera OK');
      document.getElementById('btnGeo').disabled = false;
    } catch(e) {
      log('‚ùå Camera ERR', e.name, e.message);
    }
  };

  // 2) GEOLOCATION
  document.getElementById('btnGeo').onclick = () => {
    if (!navigator.geolocation) return log('‚ùå No geolocation API');
    navigator.geolocation.getCurrentPosition(pos => {
      lat = pos.coords.latitude; lng = pos.coords.longitude;
      log('‚úÖ Geo OK', lat.toFixed(6), lng.toFixed(6));
      document.getElementById('btnGyro').disabled = false;
    }, err => {
      log('‚ùå Geo ERR', err.code, err.message);
    }, { enableHighAccuracy:true, timeout:10000 });
  };

  // 3) GYROSCOPE
  const handleOri = e => {
    heading = e.webkitCompassHeading != null
      ? e.webkitCompassHeading
      : (360 - e.alpha);
    pitch = e.beta;
    log('‚Üª Motion', heading.toFixed(1)+'¬∞', pitch.toFixed(1)+'¬∞');
  };
  document.getElementById('btnGyro').onclick = () => {
    if (typeof DeviceOrientationEvent.requestPermission === 'function') {
      DeviceOrientationEvent.requestPermission()
        .then(s => {
          if (s === 'granted') {
            window.addEventListener('deviceorientation', handleOri);
            log('‚úÖ Gyro OK');
            document.getElementById('btnAR').disabled = false;
          } else log('‚ùå Gyro DENIED');
        })
        .catch(e => log('‚ùå Gyro ERR', e));
    } else {
      window.addEventListener('deviceorientation', handleOri);
      log('‚úÖ Gyro OK (no prompt)');
      document.getElementById('btnAR').disabled = false;
    }
  };

  // 4) START AR
  document.getElementById('btnAR').onclick = () => {
    const ok = !!stream && lat != null && heading != null;
    log(ok
      ? 'üéâ All set! AR could start now.'
      : `‚ùå Missing: cam=${!!stream}, geo=${lat!=null}, gyro=${heading!=null}`
    );
  };
  </script>
</body>
</html>
