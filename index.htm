<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover" />
  <title>SunTrack AR ‚Ä¢ Accurate Overlay</title>
  <style>
    html, body {
      margin:0; padding:0;
      width:100%; height:100%;
      overflow:hidden;
      background:#000; color:#fff;
      font-family:sans-serif;
    }
    video, canvas {
      position:absolute; top:0; left:0;
      width:100%; height:100%;
      object-fit:cover;
    }
    video { z-index:0 }
    canvas { z-index:1 }
    #debug {
      position:fixed; top:env(safe-area-inset-top); left:0; right:0;
      height:120px; margin:0; padding:6px;
      background:rgba(0,0,0,0.8); color:#0f8;
      font-family:monospace; font-size:12px;
      overflow-y:auto; z-index:3;
    }
    #controls {
      position:fixed; bottom:env(safe-area-inset-bottom); left:0; right:0;
      display:flex; gap:4px; padding:6px;
      background:rgba(0,0,0,0.7); z-index:3;
    }
    #controls button {
      flex:1; padding:8px; font-size:14px;
      background:#222; color:#fff; border:none; border-radius:4px;
    }
    #controls button:disabled { opacity:0.4; }
  </style>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/suncalc/1.9.0/suncalc.min.js"></script>
</head>
<body>
  <video id="vid" playsinline autoplay muted></video>
  <canvas id="cv"></canvas>
  <pre id="debug">[ready]\n</pre>
  <div id="controls">
    <button id="btnCam">Start Camera</button>
    <button id="btnGeo" disabled>Get Location</button>
    <button id="btnGyro" disabled>Enable Motion</button>
    <button id="btnAR" disabled>Start AR</button>
    <button id="btnCopy">Copy Logs</button>
  </div>

  <script>
    const vid = document.getElementById('vid'),
          cv  = document.getElementById('cv'),
          dbg = document.getElementById('debug'),
          log = (...a)=>{ dbg.textContent+=a.join(' ')+'\n'; dbg.scrollTop=dbg.scrollHeight; };

    let stream, lat=null, lng=null,
        rawH=0, rawP=0, smoothH=0, smoothP=0,
        sunPath=[], ctx;

    const SMOOTH=0.15,
          HFOV=60,          // horizontal field of view in degrees
          rad=Math.PI/180,  // for conversions

    //‚Äî‚Äî 1) CAMERA ‚Äî‚Äî
    document.getElementById('btnCam').onclick = async()=>{
      try {
        stream = await navigator.mediaDevices.getUserMedia({ video:{ facingMode:'environment' }, audio:false });
        vid.srcObject=stream;
        log('‚úÖ Camera OK');
        btnGeo.disabled=false;
      } catch(e){
        log('‚ùå Camera ERR', e.message);
      }
    };

    //‚Äî‚Äî 2) GEOLOCATION ‚Äî‚Äî
    document.getElementById('btnGeo').onclick = ()=>{
      if(!navigator.geolocation) return log('‚ùå No geolocation');
      navigator.geolocation.getCurrentPosition(p=>{
        lat=p.coords.latitude; lng=p.coords.longitude;
        log('‚úÖ Geo OK', lat.toFixed(5), lng.toFixed(5));
        btnGyro.disabled=false;
      }, e=>log('‚ùå Geo ERR', e.message), { enableHighAccuracy:true, timeout:10000 });
    };

    //‚Äî‚Äî 3) MOTION w/ smoothing ‚Äî‚Äî
    function onOri(e){
      const h = e.webkitCompassHeading!=null ? e.webkitCompassHeading : 360 - e.alpha,
            p = e.beta;
      rawH=h; rawP=p;
      smoothH = smoothH*(1-SMOOTH) + rawH*SMOOTH;
      smoothP = smoothP*(1-SMOOTH) + rawP*SMOOTH;
      if(!onOri._t || Date.now()-onOri._t>800){
        log(`‚Üª H:${smoothH.toFixed(1)}¬∞  P:${smoothP.toFixed(1)}¬∞`);
        onOri._t=Date.now();
      }
    }
    document.getElementById('btnGyro').onclick = ()=>{
      if(DeviceOrientationEvent.requestPermission){
        DeviceOrientationEvent.requestPermission()
          .then(s=>{ if(s==='granted'){
            window.addEventListener('deviceorientation', onOri);
            log('‚úÖ Gyro OK'); btnAR.disabled=false;
          } else log('‚ùå Gyro DENIED'); })
          .catch(err=>log('‚ùå Gyro ERR', err));
      } else {
        window.addEventListener('deviceorientation', onOri);
        log('‚úÖ Gyro OK'); btnAR.disabled=false;
      }
    };

    //‚Äî‚Äî Sun path computation ‚Äî‚Äî
    function computeSunPath(){
      sunPath=[];
      const today=new Date();
      for(let i=0;i<96;i++){
        const t=new Date(today.getFullYear(),today.getMonth(),today.getDate());
        t.setMinutes(i*15);
        const pos=SunCalc.getPosition(t,lat,lng);
        sunPath.push({
          az:(pos.azimuth*180/Math.PI+360)%360,
          alt:pos.altitude*180/Math.PI
        });
      }
      log(`üéØ Path pts: ${sunPath.length}`);
    }

    //‚Äî‚Äî AR draw loop ‚Äî‚Äî
    function drawAR(){
      ctx.clearRect(0,0,cv.width,cv.height);
      const w=cv.width, h=cv.height;
      // compute vertical FOV from HFOV & aspect ratio:
      const VFOV=2*Math.atan(Math.tan((HFOV/2)*rad)*(h/w))/rad,
            halfH=HFOV/2, halfV=VFOV/2;

      // horizon (alt=0)
      const relAlt0 = 0 - smoothP;
      const y0 = (0.5 - relAlt0/halfV/2)*h;
      ctx.strokeStyle='white'; ctx.lineWidth=2;
      ctx.beginPath(); ctx.moveTo(0,y0); ctx.lineTo(w,y0); ctx.stroke();

      // sun path
      ctx.strokeStyle='yellow'; ctx.lineWidth=2; ctx.beginPath();
      sunPath.forEach((pt,i)=>{
        let rAz=pt.az - smoothH;
        if(rAz>180) rAz-=360; if(rAz<-180) rAz+=360;
        let rAlt=pt.alt - smoothP;
        if(Math.abs(rAz)<=halfH && Math.abs(rAlt)<=halfV){
          const x=(0.5 + rAz/HFOV)*w;
          const y=(0.5 - rAlt/VFOV)*h;
          i===0?ctx.moveTo(x,y):ctx.lineTo(x,y);
        }
      });
      ctx.stroke();

      // current sun
      const cur=SunCalc.getPosition(new Date(),lat,lng),
            caz=(cur.azimuth*180/Math.PI+360)%360,
            calt=cur.altitude*180/Math.PI;
      let rAz=caz-smoothH; if(rAz>180)rAz-=360; if(rAz<-180)rAz+=360;
      let rAlt=calt-smoothP;
      const sx=(0.5 + rAz/HFOV)*w,
            sy=(0.5 - rAlt/VFOV)*h;
      ctx.fillStyle='orange';
      ctx.beginPath(); ctx.arc(sx,sy,10,0,2*Math.PI); ctx.fill();
      ctx.fillStyle='white'; ctx.textAlign='center';
      ctx.fillText('‚òÄÔ∏è', sx, sy-14);

      requestAnimationFrame(drawAR);
    }

    //‚Äî‚Äî 4) START AR ‚Äî‚Äî
    document.getElementById('btnAR').onclick = ()=>{
      if(!stream||lat===null){ log('‚ùå missing prerequisites'); return; }
      cv.width=vid.videoWidth||innerWidth;
      cv.height=vid.videoHeight||innerHeight;
      ctx=cv.getContext('2d');
      computeSunPath();
      drawAR();
      log('üéâ AR started');
    };

    //‚Äî‚Äî Copy logs ‚Äî‚Äî
    document.getElementById('btnCopy').onclick=async()=>{
      await navigator.clipboard.writeText(dbg.textContent);
      log('üìã Logs copied');
    };
  </script>
</body>
</html>
