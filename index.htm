<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>AR Debug Minimal</title>
  <style>
    body,html { margin:0; padding:0; height:100%; display:flex; flex-direction:column; }
    video, canvas { flex:1; width:100%; object-fit:cover; }
    #debug { height:120px; overflow:auto; background:#011; color:#0f8;
             font-family:monospace; font-size:12px; padding:4px; }
    #controls { display:flex; gap:8px; padding:8px; background:#222; }
    button { flex:1; padding:8px; font-size:14px; }
    button:disabled { opacity:0.4; }
  </style>
</head>
<body>
  <video id="vid" playsinline autoplay muted></video>
  <canvas id="cv"></canvas>
  <div id="controls">
    <button id="btnCam">Start Camera</button>
    <button id="btnGeo" disabled>Get Location</button>
    <button id="btnGyro" disabled>Enable Motion</button>
    <button id="btnAR" disabled>Start AR</button>
  </div>
  <pre id="debug">[ready]\n</pre>

  <script>
    const log = (...args) => {
      const o = document.getElementById('debug');
      o.textContent += args.join(' ') + '\\n';
      o.scrollTop = o.scrollHeight;
    };

    let stream, lat, lng, heading, pitch;

    // 1Ô∏è‚É£ Camera
    async function startCam(){
      try {
        stream = await navigator.mediaDevices.getUserMedia({ video:{ facingMode:'environment' }, audio:false });
        document.getElementById('vid').srcObject = stream;
        log('‚úÖ Camera OK');
        document.getElementById('btnGeo').disabled = false;
      } catch(e){
        log('‚ùå Camera ERR', e.name, e.message);
      }
    }
    document.getElementById('btnCam').onclick = startCam;

    // 2Ô∏è‚É£ Geolocation
    document.getElementById('btnGeo').onclick = () => {
      if(!navigator.geolocation) return log('‚ùå No geolocation');
      navigator.geolocation.getCurrentPosition(pos=>{
        lat = pos.coords.latitude; lng = pos.coords.longitude;
        log('‚úÖ Geo OK', lat.toFixed(6), lng.toFixed(6));
        document.getElementById('btnGyro').disabled = false;
      }, err=>{
        log('‚ùå Geo ERR', err.code, err.message);
      }, { enableHighAccuracy:true, timeout:10000 });
    };

    // 3Ô∏è‚É£ Gyroscope
    function handleOri(e){
      heading = e.webkitCompassHeading !== undefined 
                ? e.webkitCompassHeading 
                : 360 - e.alpha;
      pitch = e.beta;
      log('‚Üª Motion', heading.toFixed(1)+'¬∞', pitch.toFixed(1)+'¬∞');
    }
    document.getElementById('btnGyro').onclick = () => {
      if(typeof DeviceOrientationEvent.requestPermission === 'function') {
        DeviceOrientationEvent.requestPermission()
          .then(s => {
            if(s==='granted'){
              window.addEventListener('deviceorientation', handleOri);
              log('‚úÖ Gyro OK');
              document.getElementById('btnAR').disabled = false;
            } else log('‚ùå Gyro DENIED');
          })
          .catch(e=> log('‚ùå Gyro ERR', e));
      } else {
        window.addEventListener('deviceorientation', handleOri);
        log('‚úÖ Gyro OK (no prompt)');
        document.getElementById('btnAR').disabled = false;
      }
    };

    // 4Ô∏è‚É£ AR start validation
    document.getElementById('btnAR').onclick = () => {
      const ok = !!stream && lat!=null && heading!=null;
      log(ok ? 'üéâ All set! AR could start now.' 
             : '‚ùå Missing: ' +
               `Cam=${!!stream} Geo=${lat!=null} Gyro=${heading!=null}`);
    };
  </script>
</body>
</html>
