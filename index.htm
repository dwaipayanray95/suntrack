<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <!-- enable fullscreen safe-area usage -->
  <meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover" />
  <title>AR Debug Minimal</title>
  <style>
    /* 1. Make the page extend into the ‚Äúnotch‚Äù and bottom inset */
    html, body {
      margin: 0; padding: 0;
      height: 100%; display: flex; flex-direction: column;
      /* ensure our custom padding pushes content above the home indicator */
      padding-bottom: env(safe-area-inset-bottom);
      background: #000;
    }
    /* Video + Canvas fill remaining space */
    #vid, #cv {
      flex: 1; width: 100%; object-fit: cover;
    }
    /* Control bar at bottom, above the safe-area inset */
    #controls {
      display: flex; gap: 8px;
      padding: 8px;
      background: rgba(0,0,0,0.7);
      position: absolute; left: 0; right: 0;
      /* lift controls above the home indicator */
      bottom: calc(8px + env(safe-area-inset-bottom));
      z-index: 10;
    }
    button {
      flex: 1; padding: 8px; font-size: 14px;
      border: none; background: #222; color: #fff;
      border-radius: 4px;
    }
    button:disabled { opacity: 0.4; }
    /* Debug console at bottom */
    #debug {
      height: 120px; overflow:auto;
      background: #011; color: #0f8;
      font-family: monospace; font-size: 12px;
      padding: 4px; margin-top: auto;
    }
  </style>
</head>
<body>
  <video id="vid" playsinline autoplay muted></video>
  <canvas id="cv"></canvas>

  <div id="controls">
    <button id="btnCam">Start Camera</button>
    <button id="btnGeo" disabled>Get Location</button>
    <button id="btnGyro" disabled>Enable Motion</button>
    <button id="btnAR" disabled>Start AR</button>
  </div>

  <pre id="debug">[ready]\n</pre>

  <script>
    const log = (...a) => {
      const dbg = document.getElementById('debug');
      dbg.textContent += a.join(' ') + '\n';
      dbg.scrollTop = dbg.scrollHeight;
    };

    let stream, lat, lng, heading, pitch;

    // 1Ô∏è‚É£ Camera
    document.getElementById('btnCam').onclick = async () => {
      try {
        stream = await navigator.mediaDevices.getUserMedia({
          video:{ facingMode:'environment' }, audio:false
        });
        document.getElementById('vid').srcObject = stream;
        log('‚úÖ Camera OK');
        document.getElementById('btnGeo').disabled = false;
      } catch(e) {
        log('‚ùå Camera ERR', e.name, e.message);
      }
    };

    // 2Ô∏è‚É£ Geolocation
    document.getElementById('btnGeo').onclick = () => {
      if (!navigator.geolocation) return log('‚ùå No geolocation');
      navigator.geolocation.getCurrentPosition(pos => {
        lat = pos.coords.latitude; lng = pos.coords.longitude;
        log('‚úÖ Geo OK', lat.toFixed(6), lng.toFixed(6));
        document.getElementById('btnGyro').disabled = false;
      }, err => {
        log('‚ùå Geo ERR', err.code, err.message);
      }, { enableHighAccuracy:true, timeout:10000 });
    };

    // 3Ô∏è‚É£ Gyroscope
    const handleOri = e => {
      heading = e.webkitCompassHeading != null
        ? e.webkitCompassHeading
        : 360 - e.alpha;
      pitch = e.beta;
      log('‚Üª Motion', heading.toFixed(1)+'¬∞', pitch.toFixed(1)+'¬∞');
    };
    document.getElementById('btnGyro').onclick = () => {
      if (typeof DeviceOrientationEvent.requestPermission === 'function') {
        DeviceOrientationEvent.requestPermission().then(s => {
          if (s==='granted') {
            window.addEventListener('deviceorientation', handleOri);
            log('‚úÖ Gyro OK');
            document.getElementById('btnAR').disabled = false;
          } else log('‚ùå Gyro DENIED');
        }).catch(e => log('‚ùå Gyro ERR', e));
      } else {
        window.addEventListener('deviceorientation', handleOri);
        log('‚úÖ Gyro OK (no prompt)');
        document.getElementById('btnAR').disabled = false;
      }
    };

    // 4Ô∏è‚É£ AR start check
    document.getElementById('btnAR').onclick = () => {
      const ok = !!stream && lat!=null && heading!=null;
      log(ok
        ? 'üéâ All set! AR could start now.'
        : `‚ùå Missing inputs: cam=${!!stream}, geo=${lat!=null}, gyro=${heading!=null}`);
    };
  </script>
</body>
</html>
